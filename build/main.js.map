{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { FormComponent } from './components/form/form.component';\nimport { GameComponent } from './components/game/game.component';\n\nconst routes: Routes = [\n  { path: 'form', component: FormComponent },\n  { path: 'game', component: GameComponent },\n  { path: '', component: HomeComponent }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormComponent } from './components/form/form.component';\nimport { GameComponent } from './components/game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    FormComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n    dynamicForm: FormGroup;\n    submitted = false;\n    modalError:boolean = false;\n\n    constructor(private formBuilder: FormBuilder, private route: Router) { }\n\n    ngOnInit() {\n        this.dynamicForm = this.formBuilder.group({\n            mode: [null, Validators.required],  \n            height: [null, Validators.required],\n            numberPlayers: ['', Validators.required],\n            players: new FormArray([])\n        });\n    }\n\n    // convenience getters for easy access to form fields\n    get f() { return this.dynamicForm.controls; }\n    get t() { return this.f.players as FormArray; }\n    get h() { return this.f.height; }\n    get m() { return this.f.mode; }\n\n    onChangeTickets(e) {\n        const numberPlayers = e.target.value || 0;\n        if (this.t.length < numberPlayers) {\n            for (let i = this.t.length; i < numberPlayers; i++) {\n                this.t.push(this.formBuilder.group({\n                    name: ['', Validators.required]\n                }));\n            }\n        } else {\n            for (let i = this.t.length; i >= numberPlayers; i--) {\n                this.t.removeAt(i);\n            }\n        }\n    }\n\n    checkRepeatedPlayers() {\n        let checkPlayers:string[] = [];\n        let result:string = \"\";\n        this.f.players.value.forEach(player => {\n            if (checkPlayers.includes(player.name)) {\n                result = 'error';\n            }else{\n                checkPlayers.push(player.name)\n            }\n        });\n        return result;\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        // Check is any name is repeated\n        let test:string = this.checkRepeatedPlayers();\n        if (test === 'error') {\n            this.modalError = true;\n            return;\n        }\n        // stop here if form is invalid\n        if (this.dynamicForm.invalid) {\n            return;\n        }\n        // Save Game data in Local Storage\n        localStorage.setItem('pyramid_height',this.f.height.value)\n        localStorage.setItem('pyramid_mode',this.f.mode.value)\n        localStorage.setItem('pyramid_users',JSON.stringify(this.f.players.value))\n        this.route.navigate(['/game']);\n    }\n\n    onReset() {\n        // reset whole form back to initial state\n        this.submitted = false;\n        this.dynamicForm.reset();\n        this.t.clear();\n    }\n\n    onClear() {\n        // clear errors and reset ticket fields\n        this.submitted = false;\n        this.t.reset();\n        this.h.reset();\n        this.m.reset();\n    }\n\n    closeModalError() {\n        this.modalError = false;\n    }\n}\n","<clr-main-container>\n    <clr-header>\n        <div class=\"header-nav\" [clr-nav-level]=\"1\">\n            <div class=\"branding\">\n                <a href=\"https://lpsoftware.space\" class=\"nav-link\">\n                    <clr-icon shape=\"happy-face\"></clr-icon>\n                </a>\n                <span i18n class=\"title\">Pyramid Game</span>\n            </div>\n            <a i18n routerLink=\"/\" routerLinkActive=\"active\" class=\"active nav-link nav-text\">Home</a>\n        </div>\n    </clr-header>\n    <div class=\"content-container body-container\">\n        <main class=\"content-area center-content\">\n            <form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"div-form\">\n                    <h1 class=\"title\">Set game data</h1>\n                    <br>\n                    <div>\n                        <label>Mode</label>\n                        <select formControlName=\"mode\" class=\"form-control select-form\" [ngClass]=\"{ 'is-invalid': submitted && f.mode.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let i of ['Hard','Normal']\">{{i}}</option>\n                        </select><br>\n                        <small class=\"help-text\">Hard mode: All cards drinks at least one player</small><br>\n                        <small class=\"help-text\">Normal mode: Get random cards and fill with all drinks</small><br>\n                        <div *ngIf=\"submitted && f.height.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.height.errors.required\" class=\"error\">Height is required</div>\n                        </div>\n                    </div>\n                    <br>\n                    <div>\n                        <label>Height</label>\n                        <select formControlName=\"height\" class=\"form-control select-form\" [ngClass]=\"{ 'is-invalid': submitted && f.height.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10]\">{{i}}</option>\n                        </select>\n                        <div *ngIf=\"submitted && f.height.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.height.errors.required\" class=\"error\">Height is required</div>\n                        </div>\n                    </div>\n                    <br>\n                    <div>\n                        <label>Number of players</label>\n                        <select formControlName=\"numberPlayers\" class=\"form-control select-form\" (change)=\"onChangeTickets($event)\" [ngClass]=\"{ 'is-invalid': submitted && f.numberPlayers.errors }\">\n                            <option value=\"\"></option>\n                            <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\">{{i}}</option>\n                        </select>\n                        <div *ngIf=\"submitted && f.numberPlayers.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.numberPlayers.errors.required\" class=\"error\">Number of players is required</div>\n                        </div>\n                    </div>\n                    <div *ngFor=\"let ticket of t.controls; let i = index\" class=\"list-group list-group-flush\">\n                        <div class=\"list-group-item\">\n                            <div [formGroup]=\"ticket\" class=\"input-form card\">\n                                <div class=\"form-group col-6\">\n                                    <input type=\"text\" formControlName=\"name\" placeholder=\"Player {{i + 1}}\" class=\"form-control input-form-text\" [ngClass]=\"{ 'is-invalid': submitted && ticket.controls.name.errors }\" />\n                                    <div *ngIf=\"submitted && ticket.controls.name.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"ticket.controls.name.errors.required\" class=\"error\">Name is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br>\n                    <div class=\"card-footer text-center\">\n                        <button class=\"btn btn-primary mr-1\">Play</button><br><br>\n                        <button class=\"btn btn-secondary mr-1\" type=\"reset\" (click)=\"onReset()\">Reset</button>\n                        <button class=\"btn btn-secondary\" type=\"button\" (click)=\"onClear()\">Clear</button>\n                    </div>\n                </div>\n            </form>\n        </main>\n    </div>\n</clr-main-container>\n\n<clr-modal [(clrModalOpen)]=\"modalError\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">Check names</h3>\n    <div class=\"modal-body\">\n        <p>You have one or more players names repeated</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModalError()\">Close</button>\n    </div>\n</clr-modal>","import { Component, OnInit } from '@angular/core';\nimport {Router } from '@angular/router';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  height:string;\n  mode:string;\n  players:string[];\n  userList:string[];\n  userDrinks:object[] = [];\n  structure:object[][] = [];\n  cardInGame:string = '0';\n  lastCard:number;\n  numberCardsInGame:number;\n  userCardList:string[] = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\",\"Q\", \"K\",\n  \"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\",\"K\",\n  \"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\",\n  \"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n  boardCardList:string[] = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\",\"Q\", \"K\",\n  \"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\",\"K\",\n  \"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\",\n  \"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n  userCardsInGame:string[] = [];\n  setRule:number;\n  modalRules:boolean = false;\n  userRules:string = '';\n  modalWinners:boolean = false;\n  winners:string = '';\n  modalCard:boolean = false;\n  cardPlayed:string = '';\n  userPlayed:string = '';\n  action:string = '';\n  actualRow:string = '';\n  shots:string = '';\n\n  constructor(private route: Router) { }\n\n  ngOnInit() {\n    this.mode = localStorage.getItem('pyramid_mode')\n    this.height = localStorage.getItem('pyramid_height')\n    this.mode = localStorage.getItem('pyramid_mode')\n    this.players = JSON.parse(localStorage.getItem('pyramid_users')) || []\n    this.setGame(this.mode);\n  }\n\n  setGame(mode:string){\n    this.setUserVars(this.players);\n    if (mode === 'Hard') {\n      this.setNumberCardsInGame();\n      this.setUserCards('Hard');\n      if (this.numberCardsInGame > this.userCardsInGame.length) {\n        let diff:number = this.numberCardsInGame - this.userCardsInGame.length;\n        this.fillBoard(diff);\n      }\n      this.setStructure('Hard');\n    }else if (mode === 'Normal') {\n      this.setNumberCardsInGame();\n      this.setUserCards('Normal');\n      this.setStructure('Normal');\n    }\n    this.setRuleTime();\n  }\n\n  setNumberCardsInGame() {\n    let number_cards:number = 0;\n    for (let i = 1; i < Number(this.height) + 1; i++) {\n      number_cards += i\n    }\n    this.numberCardsInGame = number_cards;\n  }\n\n  setUserCards(mode:string) {\n    let userData:object[] = [];\n    if (mode === 'Hard') {\n      this.players.forEach(user => {\n        let card1:string = this.setCards('user', mode, false);\n        let card2:string = this.setCards('user', mode, false);\n        userData.push({'name': user['name'], 'cards': [card1, card2]})\n        if (!this.userCardsInGame.includes(card1)) {\n          this.userCardsInGame.push(card1);\n          this.userCardsInGame.push(card1);\n          this.userCardsInGame.push(card1);\n          this.userCardsInGame.push(card1);  \n        }\n        if (!this.userCardsInGame.includes(card2)) {\n          this.userCardsInGame.push(card2);\n          this.userCardsInGame.push(card2);\n          this.userCardsInGame.push(card2);\n          this.userCardsInGame.push(card2);  \n        }\n      });\n    }else if (mode === 'Normal') {\n      this.players.forEach(user => {\n        let card1:string = this.setCards('user', mode, false);\n        let card2:string = this.setCards('user', mode, false);\n        userData.push({'name': user['name'], 'cards': [card1, card2]})\n        if (!this.userCardsInGame.includes(card1)) {\n          this.userCardsInGame.push(card1);\n        }\n        if (!this.userCardsInGame.includes(card2)) {\n          this.userCardsInGame.push(card2);\n        }\n      });\n    }\n    this.setUserDrinks(userData);\n  }\n\n  // Fill Board\n  // If diff cards > 7 , fill with 'all drinks' and 7 repeated cards from users\n  fillBoard(diff:number) {\n    let originalCards:string[] = this.userCardsInGame;\n    let diffCards:number = diff;\n    if (diff > 7) {\n      diffCards = 7\n      for (let i = 0; i < diff - 7; i++) {\n        this.userCardsInGame.push('0')\n      }\n    }\n    for (let i = 0; i < diffCards; i++) {\n      let randomCard:string = originalCards[Math.floor(Math.random()*originalCards.length)];\n      this.userCardsInGame.push(randomCard)\n    }\n  }\n\n  setUserVars(users) {\n    let userList:string[] = []\n    users.forEach(user => {\n      userList.push(user.name)\n      localStorage.setItem('pyramid_user_' + user.name, '0')\n    });\n    this.userList = userList;\n  }\n\n  // Set structure by mode\n  // If normal and card without user fill with 'all drinks' card\n  setStructure(mode:string){\n    let set_structure:object[][] = [];\n    let cont:number = this.numberCardsInGame;\n    let rowNumber:number = Number(this.height) - 1;\n    let type:boolean = true;\n    for (let index = 1; index < Number(this.height) + 1; index++) {\n      let row:object[] = [];\n      for (let data = 0; data < index; data++) {\n        if (index === 1) {\n          row.push({card: this.setCards('board', mode, true), number: cont - 1, row: rowNumber, type: type})\n          cont = cont - 1;\n        }else {\n          row.push({card: this.setCards('board', mode, false), number: cont - 1, row: rowNumber, type: type})\n          cont = cont - 1;\n        }\n      }\n      type = !type;\n      rowNumber = rowNumber - 1;\n      set_structure.push(row.reverse())\n    }\n    this.lastCard = this.numberCardsInGame;\n    this.structure = set_structure\n  }\n\n  // Set cards, first card never is 'all drinks'\n  // 5 tries to get another card. If not found put all drinks card\n  setCards(type:string, mode:string, first:boolean) {\n    if (type === 'board') {\n      if (mode === 'Hard') {\n        let randomCard:string = this.userCardsInGame[Math.floor(Math.random()*this.userCardsInGame.length)];\n        if (first) {\n          let cont:number = 0;\n          while (cont < 5) {\n            let card:string = this.userCardsInGame[Math.floor(Math.random()*this.userCardsInGame.length)];\n            if (card !== '0') {\n              randomCard = card;\n              cont = 5;\n            }\n          }\n        }\n        // Remove cards from list\n        let new_card_list:string[] = this.userCardsInGame;\n        for (let index = 0; index < new_card_list.length; index++) {\n            if ( randomCard === new_card_list[index] ) {\n                delete new_card_list[index]\n                break\n            }\n        }\n        // Remove undefined items\n        const new_card_list_clean = []\n        for (let index = 0; index < new_card_list.length; index++) {\n            if ( new_card_list[index] !== undefined ) {\n                new_card_list_clean.push(new_card_list[index])\n            }\n        }\n        this.userCardsInGame = new_card_list_clean\n        return randomCard; \n      }else if (mode === 'Normal') {\n        let randomCard:string = this.boardCardList[Math.floor(Math.random()*this.boardCardList.length)];\n        if (first) {\n          let cont:number = 0;\n          while (cont < 5) {\n            let card:string = this.boardCardList[Math.floor(Math.random()*this.boardCardList.length)];\n            if (this.userCardsInGame.includes(card)) {\n              randomCard = card;\n              cont = 5;\n            }\n          }\n        }\n        // Remove cards from list\n        let new_card_list:string[] = this.boardCardList;\n        for (let index = 0; index < new_card_list.length; index++) {\n            if ( randomCard === new_card_list[index] ) {\n                delete new_card_list[index]\n                break\n            }\n        }\n        // Remove undefined items\n        const new_card_list_clean = []\n        for (let index = 0; index < new_card_list.length; index++) {\n            if ( new_card_list[index] !== undefined ) {\n                new_card_list_clean.push(new_card_list[index])\n            }\n        }\n        this.boardCardList = new_card_list_clean\n        if (!this.userCardsInGame.includes(randomCard)) {\n          return '0'\n        }else {\n          return randomCard;\n        }\n      }\n      \n    }else if (type === 'user') {\n      let randomCard:string = this.userCardList[Math.floor(Math.random()*this.userCardList.length)];\n      // Remove cards from list\n      let new_card_list:string[] = this.userCardList;\n      for (let index = 0; index < new_card_list.length; index++) {\n          if ( randomCard === new_card_list[index] ) {\n              delete new_card_list[index]\n              break\n          }\n      }\n      // Remove undefined items\n      const new_card_list_clean = []\n      for (let index = 0; index < new_card_list.length; index++) {\n          if ( new_card_list[index] !== undefined ) {\n              new_card_list_clean.push(new_card_list[index])\n          }\n      }\n      this.userCardList = new_card_list_clean\n      return randomCard; \n    }else {\n      return '';\n    }\n  } \n\n  checkCard(id) {\n    if (this.cardInGame != id) {\n      return true\n    }else{\n      return false\n    }\n  }\n\n  playCard(item) {\n    if (this.ruleTime()) {\n      this.createRule();\n      this.cardInGame = (Number(this.cardInGame) + 1).toString()\n      this.cardPlayed = \"../../../assets/Cards/\" + item.card + \".png\";\n      if (item.card === '0') {\n        this.userPlayed = 'All'\n        this.action = 'drinks';\n        this.userDrinks.forEach(user => {\n          this.addDrinks(user['name'], item.row + 1)\n        });\n      }else {\n        let users:string[] = this.getUsersWithCard(item['card']);\n        if (item.type) {\n          users.forEach(user => {\n            this.addDrinks(user, item.row + 1)\n          });\n        }\n        this.userPlayed = users.join(', ');\n        if (item.type) {\n          this.action = 'drinks';\n        }else {\n          this.action = 'gives';\n        }\n      }\n      this.actualRow = item.row + 1;\n      if (item.row === 0) {\n        this.shots = 'shot !'\n      }else {\n        this.shots = 'shots !'\n      }\n    }else {\n      this.cardInGame = (Number(this.cardInGame) + 1).toString()\n      this.cardPlayed = \"../../../assets/Cards/\" + item.card + \".png\";\n      if (item.card === '0') {\n        this.userPlayed = 'All'\n        this.action = 'drinks';\n        this.userDrinks.forEach(user => {\n          this.addDrinks(user['name'], item.row + 1)\n        });\n      }else {\n        let users:string[] = this.getUsersWithCard(item['card']);\n        if (item.type) {\n          users.forEach(user => {\n            this.addDrinks(user, item.row + 1)\n          });\n        }\n        this.userPlayed = users.join(', ');\n        if (item.type) {\n          this.action = 'drinks';\n        }else {\n          this.action = 'gives';\n        }\n      }\n      this.actualRow = item.row + 1;\n      if (item.row === 0) {\n        this.shots = 'shot !'\n      }else {\n        this.shots = 'shots !'\n      }\n      this.modalCard = true;\n    }\n    \n  }\n\n  getUsersWithCard(card:string) {\n    let users:string[] = [];\n    this.userDrinks.forEach(user => {\n      if (user['cards'].includes(card)) {\n        users.push(user['name'])\n      }\n    });\n    return users;\n  }\n\n  addDrinks(user:string, numberDrinks:number) {\n    let beforeDrinks:string = localStorage.getItem('pyramid_user_' + user)\n    let newDrinks:number = Number(beforeDrinks) + numberDrinks\n    localStorage.setItem('pyramid_user_' + user, newDrinks.toString())\n    this.updateUserDrinks();\n  }\n\n  setUserDrinks(userData:object[]) {\n    let userDrinks:object[] = []\n    userData.forEach(user => {\n      let userData:object = {name: user['name'], cards: user['cards'], drinks : localStorage.getItem('pyramid_user_' + user['name'])}\n      userDrinks.push(userData)\n    });\n    this.userDrinks = userDrinks;\n  }\n\n  updateUserDrinks() {\n    let userDrinks:object[] = []\n    this.userDrinks.forEach(user => {\n      let userData:object = {name: user['name'], cards: user['cards'], drinks : localStorage.getItem('pyramid_user_' + user['name'])}\n      userDrinks.push(userData)\n    });\n    userDrinks.sort((a, b) => {\n      return b['drinks'] - a['drinks'];\n    });\n    this.userDrinks = userDrinks;\n  }\n\n  userMoreDrinks() {\n    let maxDrinks:number = -1\n    let maxDrinksUser:string = ''\n    this.userList.forEach(user => {\n      let drinks:number =  Number(localStorage.getItem('pyramid_user_' + user))\n      if (drinks > maxDrinks) {\n        maxDrinks = drinks\n        maxDrinksUser = user\n      }else if (drinks === maxDrinks) {\n        maxDrinksUser = maxDrinksUser + ',' + user\n      }\n    });\n    this.winners = maxDrinksUser + ' with ' + maxDrinks + ' drinks !!!';\n    this.modalWinners = true;\n  }\n\n  finish() {\n    this.userMoreDrinks()\n    localStorage.removeItem('pyramid_height')\n    localStorage.removeItem('pyramid_mode')\n    localStorage.removeItem('pyramid_users')\n    this.userList.forEach(user => {\n      localStorage.removeItem('pyramid_user_' + user)\n    });\n  }\n\n  closeModalWinners() {\n    this.modalWinners = false;\n    this.route.navigate(['/']);\n  }\n\n  closeModalCard() {\n    this.modalCard = false;\n    if (Number(this.cardInGame) === this.lastCard) {\n      this.finish()\n    }\n  }\n\n  closeModalRules() {\n    this.modalRules = false;\n    this.modalCard = true;\n  }\n\n  // Choose random user\n  createRule() {\n    let randomUser:string = this.userList[Math.floor(Math.random()*this.userList.length)];\n    this.userRules = randomUser;\n    this.modalRules = true;\n  }\n\n  // Rule created after 10 cards\n  // If last card not show rule\n  ruleTime() {\n    if ( (Number(this.cardInGame) + 1) === this.lastCard ) {\n      return false;\n    }\n    if (Number.isInteger((Number(this.cardInGame) + 1)/this.setRule)) {\n      return true;\n    }else {\n      return false;\n    }\n  }\n\n  // If pyramid height > 4 rules every 10 cards\n  // else rule every 5 cards\n  setRuleTime() {\n    if (Number(this.height) > 4) {\n      this.setRule = 10\n    }else {\n      this.setRule = 5\n    }\n  }\n}\n","<clr-main-container>\n    <clr-header>\n        <div class=\"header-nav\" [clr-nav-level]=\"1\">\n            <div class=\"branding\">\n                <a href=\"https://lpsoftware.space\" class=\"nav-link\">\n                    <clr-icon shape=\"happy-face\"></clr-icon>\n                </a>\n                <span i18n class=\"title\">Pyramid Game</span>\n            </div>\n            <a i18n (click)=\"finish()\" class=\"nav-link nav-text\">Finish game</a>\n        </div>\n    </clr-header>\n    <div class=\"content-container\">\n        <main class=\"content-area center-content\">\n            <table>\n                <tbody>\n                    <tr class=\"row\" *ngFor=\"let row of structure\">           \n                        <td *ngFor=\"let item of row\">\n                            <button id={{item.number}} [disabled]=\"checkCard(item.number)\" (click)=\"playCard(item)\" class=\"card button\">\n                                \n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </main>\n        <nav class=\"sidenav nav\" [clr-nav-level]=\"2\">\n            <h2 style=\"text-align: center;\">Drinks</h2>\n            <table class=\"table table-users\">\n                <thead>\n                    <tr>\n                        <th>User</th>\n                        <th>Cards</th>\n                        <th>Drinks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of userDrinks\">\n                        <td>{{user.name}}</td>\n                        <td>{{user.cards}}</td>\n                        <td>{{user.drinks}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </nav>\n    </div>\n</clr-main-container>\n\n<clr-modal [(clrModalOpen)]=\"modalWinners\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">Winners</h3>\n    <div class=\"modal-body\">\n        <p>{{winners}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModalWinners()\">Finish</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"modalCard\" [clrModalClosable]=\"false\" [clrModalSize]=\"'sm'\">\n    <div class=\"modal-body body-modal\">\n        <p>{{userPlayed}} {{action}} {{actualRow}} {{shots}}</p>\n        <br>\n        <img src={{cardPlayed}} alt=\"Card\" class=\"card-played\"/>\n    </div>\n    <div class=\"modal-footer footer-modal\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModalCard()\" >Close</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"modalRules\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">Set a rule</h3>\n    <div class=\"modal-body\">\n        <p>{{userRules}} choose your rule</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModalRules()\">Close</button>\n    </div>\n</clr-modal>","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private titleService:Title) {\n    this.titleService.setTitle(\"Pyramid Game\");\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-main-container>\n    <clr-header>\n        <div class=\"header-nav\" [clr-nav-level]=\"1\">\n            <div class=\"branding\">\n                <a href=\"https://lpsoftware.space\" class=\"nav-link\">\n                    <clr-icon shape=\"happy-face\"></clr-icon>\n                </a>\n                <span i18n class=\"title\">Pyramid Game</span>\n            </div>\n            <a i18n routerLink=\"/\" routerLinkActive=\"active\" class=\"active nav-link nav-text\">Home</a>\n            <a i18n routerLink=\"/form\" class=\"nav-link nav-text\">Start Game</a>\n        </div>\n    </clr-header>\n    <div class=\"content-container body-container\">\n        <main class=\"content-area center-content\">\n            <h1 i18n class=\"title\">Pyramid Game</h1>\n            <h5 i18n>Steps</h5>\n            <ul class=\"clr-timeline clr-timeline-vertical\">\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Ingrese nombre de jugadores</span>\n                        <span i18n class=\"clr-timeline-step-description\">1-26 players</span>\n                    </div>\n                </li>\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Ingrese altura de pirámide</span>\n                        <span i18n class=\"clr-timeline-step-description\">1-10</span>\n                    </div>\n                </li>\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Empiece a jugar y beber</span>\n                    </div>\n                </li>\n            </ul>\n            <h5 i18n>Rules</h5>\n            <ul class=\"clr-timeline clr-timeline-vertical\">\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Se asignan 2 cartas al azar por jugador</span>\n                    </div>\n                </li>\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">La dificultad depende de la altura de la piramide</span>\n                    </div>\n                </li>\n            </ul>\n        </main>\n        <nav class=\"sidenav body-container nav\" [clr-nav-level]=\"2\">\n            <img src=\"../../../assets/Example.png\" alt=\"Example\" class=\"image\"/>\n            <h6 class=\"lpsoftware\">By LPSoftware</h6>\n        </nav>\n    </div>\n</clr-main-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}