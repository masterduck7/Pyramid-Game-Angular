{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { FormComponent } from './components/form/form.component';\nimport { GameComponent } from './components/game/game.component';\n\nconst routes: Routes = [\n  { path: 'form', component: FormComponent },\n  { path: 'game', component: GameComponent },\n  { path: '', component: HomeComponent }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormComponent } from './components/form/form.component';\nimport { GameComponent } from './components/game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    FormComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n    dynamicForm: FormGroup;\n    submitted = false;\n\n    constructor(private formBuilder: FormBuilder, private route: Router) { }\n\n    ngOnInit() {\n        this.dynamicForm = this.formBuilder.group({\n            mode: [null, Validators.required],  \n            height: [null, Validators.required],\n            numberPlayers: ['', Validators.required],\n            players: new FormArray([])\n        });\n    }\n\n    // convenience getters for easy access to form fields\n    get f() { return this.dynamicForm.controls; }\n    get t() { return this.f.players as FormArray; }\n    get h() { return this.f.height; }\n    get m() { return this.f.mode; }\n\n    onChangeTickets(e) {\n        const numberPlayers = e.target.value || 0;\n        if (this.t.length < numberPlayers) {\n            for (let i = this.t.length; i < numberPlayers; i++) {\n                this.t.push(this.formBuilder.group({\n                    name: ['', Validators.required]\n                }));\n            }\n        } else {\n            for (let i = this.t.length; i >= numberPlayers; i--) {\n                this.t.removeAt(i);\n            }\n        }\n    }\n\n    checkRepeatedPlayers() {\n        let checkPlayers:string[] = [];\n        let result:string = \"\";\n        this.f.players.value.forEach(player => {\n            if (checkPlayers.includes(player.name)) {\n                result = 'error';\n            }else{\n                checkPlayers.push(player.name)\n            }\n        });\n        return result;\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        // Check is any name is repeated\n        let test:string = this.checkRepeatedPlayers();\n        if (test === 'error') {\n            alert('Check names')\n            return;\n        }\n        // stop here if form is invalid\n        if (this.dynamicForm.invalid) {\n            return;\n        }\n        // Save Game data in Local Storage\n        localStorage.setItem('pyramid_height',this.f.height.value)\n        localStorage.setItem('pyramid_mode',this.f.mode.value)\n        localStorage.setItem('pyramid_users',JSON.stringify(this.f.players.value))\n        this.route.navigate(['/game']);\n    }\n\n    onReset() {\n        // reset whole form back to initial state\n        this.submitted = false;\n        this.dynamicForm.reset();\n        this.t.clear();\n    }\n\n    onClear() {\n        // clear errors and reset ticket fields\n        this.submitted = false;\n        this.t.reset();\n        this.h.reset();\n        this.m.reset();\n    }\n}\n","<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"https://lpsoftware.space\" class=\"nav-link\">\n            <clr-icon shape=\"happy-face\"></clr-icon>\n        </a>\n        <span i18n class=\"title\">Pyramid Game</span>\n    </div>\n    <div class=\"header-nav\">\n        <a i18n routerLink=\"/\" class=\"nav-link nav-text\">Home</a>\n        <a i18n routerLink=\"/form\" routerLinkActive=\"active\" class=\"active nav-link nav-text\">Start Game</a>\n        <a i18n routerLink=\"/\" class=\"nav-link nav-text\">Statistics</a>\n    </div>\n</header>\n<form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"div-form\">\n        <h1 class=\"title\">Set game data</h1>\n        <div>\n            <label>Mode</label>\n            <select formControlName=\"mode\" class=\"form-control select-form\" [ngClass]=\"{ 'is-invalid': submitted && f.mode.errors }\">\n                <option value=\"\"></option>\n                <option *ngFor=\"let i of ['Hard','Normal']\">{{i}}</option>\n            </select>\n            <div *ngIf=\"submitted && f.height.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.height.errors.required\" class=\"error\">Height is required</div>\n            </div>\n        </div>\n        <div>\n            <label>Height</label>\n            <select formControlName=\"height\" class=\"form-control select-form\" [ngClass]=\"{ 'is-invalid': submitted && f.height.errors }\">\n                <option value=\"\"></option>\n                <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10]\">{{i}}</option>\n            </select>\n            <div *ngIf=\"submitted && f.height.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.height.errors.required\" class=\"error\">Height is required</div>\n            </div>\n        </div>\n        <div>\n            <label>Number of players</label>\n            <select formControlName=\"numberPlayers\" class=\"form-control select-form\" (change)=\"onChangeTickets($event)\" [ngClass]=\"{ 'is-invalid': submitted && f.numberPlayers.errors }\">\n                <option value=\"\"></option>\n                <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\">{{i}}</option>\n            </select>\n            <div *ngIf=\"submitted && f.numberPlayers.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.numberPlayers.errors.required\" class=\"error\">Number of players is required</div>\n            </div>\n        </div>\n        <div *ngFor=\"let ticket of t.controls; let i = index\" class=\"list-group list-group-flush\">\n            <div class=\"list-group-item\">\n                <div [formGroup]=\"ticket\" class=\"input-form card\">\n                    <div class=\"form-group col-6\">\n                        <input type=\"text\" formControlName=\"name\" placeholder=\"Player {{i + 1}}\" class=\"form-control input-form-text\" [ngClass]=\"{ 'is-invalid': submitted && ticket.controls.name.errors }\" />\n                        <div *ngIf=\"submitted && ticket.controls.name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ticket.controls.name.errors.required\" class=\"error\">Name is required</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer text-center\">\n            <button class=\"btn btn-primary mr-1\">Play</button>\n            <button class=\"btn btn-secondary mr-1\" type=\"reset\" (click)=\"onReset()\">Reset</button>\n            <button class=\"btn btn-secondary\" type=\"button\" (click)=\"onClear()\">Clear</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {Router } from '@angular/router';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  height:string;\n  mode:string;\n  players:string[];\n  userList:string[];\n  userDrinks:object[] = [];\n  structure:number[][] = [];\n  lastCard:number;\n\n  constructor(private route: Router) { }\n\n  ngOnInit() {\n    this.height = localStorage.getItem('pyramid_height')\n    this.mode = localStorage.getItem('pyramid_mode')\n    this.players = JSON.parse(localStorage.getItem('pyramid_users')) || []\n    localStorage.setItem('pyramid_lastcard','0')\n    this.setStructure();\n    this.setUsers(this.players);\n  }\n\n  setStructure(){\n    let set_structure:number[][] = [];\n    let cont:number = 0;\n    for (let index = Number(this.height); index > 0; index--) {\n      let row:number[] = [];\n      for (let data = 0; data < index; data++) {\n        row.push(cont)\n        cont = cont + 1;\n      }\n      set_structure.push(row)\n    }\n    this.lastCard = cont;\n    this.structure = set_structure\n  }\n\n  setUsers(users) {\n      let userList:string[] = []\n      users.forEach(user => {\n        userList.push(user.name)\n        localStorage.setItem('pyramid_user_' + user.name, '0')\n      });\n      this.userList = userList;\n  }\n\n  checkCard(id) {\n    let lastCardPlayed:string = localStorage.getItem('pyramid_lastcard');\n    if (lastCardPlayed != id) {\n      return true\n    }else{\n      return false\n    }\n  }\n\n  playCard(item) {\n    let lastCardPlayed:string = localStorage.getItem('pyramid_lastcard');\n    let newCard:number = Number(lastCardPlayed) + 1\n    localStorage.setItem('pyramid_lastcard',newCard.toString())\n    this.addDrinks(\"a\", 1)\n    if (item + 1 === this.lastCard) {\n      this.finish()\n    }\n  }\n\n  addDrinks(user:string, numberDrinks:number) {\n    let beforeDrinks:string = localStorage.getItem('pyramid_user_' + user)\n    let newDrinks:number = Number(beforeDrinks) + numberDrinks\n    localStorage.setItem('pyramid_user_' + user, newDrinks.toString())\n    this.updateUserDrinks();\n  }\n\n  updateUserDrinks() {\n    let userDrinks:object[] = []\n    this.userList.forEach(user => {\n      let userData:object = {name: user, drinks : localStorage.getItem('pyramid_user_' + user)}\n      userDrinks.push(userData)\n    });\n    this.userDrinks = userDrinks;\n  }\n\n  finish() {\n    alert(\"Finished\")\n    localStorage.removeItem('pyramid_height')\n    localStorage.removeItem('pyramid_mode')\n    localStorage.removeItem('pyramid_users')\n    localStorage.removeItem('pyramid_lastcard')\n    this.userList.forEach(user => {\n      localStorage.removeItem('pyramid_user_' + user)\n    });\n    this.route.navigate(['/']);\n  }\n\n}\n","<clr-main-container>\n    <clr-header>\n        <div class=\"header-nav\" [clr-nav-level]=\"1\">\n            <div class=\"branding\">\n                <a href=\"https://lpsoftware.space\" class=\"nav-link\">\n                    <clr-icon shape=\"happy-face\"></clr-icon>\n                </a>\n                <span i18n class=\"title\">Pyramid Game</span>\n            </div>\n            <a i18n routerLink=\"/\" (click)=\"finish()\" class=\"nav-link nav-text\">Finish game</a>\n            <a i18n class=\"nav-link nav-text\">Statistics</a>\n        </div>\n    </clr-header>\n    <div class=\"content-container\">\n        <main class=\"content-area center-content\">\n            <table>\n                <tbody>\n                    <tr class=\"row\" *ngFor=\"let row of structure\">           \n                        <td *ngFor=\"let item of row\">\n                            <button id={{item}} [disabled]=\"checkCard(item)\" (click)=\"playCard(item)\" class=\"card button\">\n                                {{item}}\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </main>\n        <nav class=\"sidenav\" [clr-nav-level]=\"2\">\n            Holi\n        </nav>\n    </div>\n</clr-main-container>","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private titleService:Title) {\n    this.titleService.setTitle(\"Pyramid Game\");\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-main-container>\n    <clr-header>\n        <div class=\"header-nav\" [clr-nav-level]=\"1\">\n            <div class=\"branding\">\n                <a href=\"https://lpsoftware.space\" class=\"nav-link\">\n                    <clr-icon shape=\"happy-face\"></clr-icon>\n                </a>\n                <span i18n class=\"title\">Pyramid Game</span>\n            </div>\n            <a i18n routerLink=\"/\" routerLinkActive=\"active\" class=\"active nav-link nav-text\">Home</a>\n            <a i18n routerLink=\"/form\" class=\"nav-link nav-text\">Start Game</a>\n            <a i18n routerLink=\"/\" class=\"nav-link nav-text\">Statistics</a>\n        </div>\n    </clr-header>\n    <div class=\"content-container body-container\">\n        <main class=\"content-area center-content\">\n            <h1 i18n class=\"title\">Pyramid Game</h1>\n            <h5 i18n>Steps</h5>\n            <ul class=\"clr-timeline clr-timeline-vertical\">\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Ingrese nombre de jugadores</span>\n                        <span i18n class=\"clr-timeline-step-description\">1-26 players</span>\n                    </div>\n                </li>\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Ingrese altura de pirámide</span>\n                        <span i18n class=\"clr-timeline-step-description\">1-10</span>\n                    </div>\n                </li>\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Empiece a jugar y beber</span>\n                    </div>\n                </li>\n            </ul>\n            <h5 i18n>Rules</h5>\n            <ul class=\"clr-timeline clr-timeline-vertical\">\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">Se asignan 2 cartas al azar por jugador</span>\n                    </div>\n                </li>\n                <li class=\"clr-timeline-step\">\n                    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n                    <div class=\"clr-timeline-step-body\">\n                        <span i18n class=\"clr-timeline-step-title\">La dificultad depende de la altura de la piramide</span>\n                    </div>\n                </li>\n            </ul>\n        </main>\n        <nav class=\"sidenav body-container\" [clr-nav-level]=\"2\">\n            <img src=\"../../../assets/Example.png\" alt=\"Example\" class=\"image\"/>\n        </nav>\n    </div>\n</clr-main-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}